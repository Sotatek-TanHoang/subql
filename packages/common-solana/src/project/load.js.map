{"version":3,"file":"load.js","sourceRoot":"","sources":["load.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;;;;AAEtC,4CAAoB;AACpB,gDAAwB;AACxB,sDAA2B;AAC3B,2CAA+E;AAE/E,SAAgB,kBAAkB,CAAC,IAAY;IAC7C,MAAM,EAAC,GAAG,EAAC,GAAG,cAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAE/B,IAAI,GAAG,KAAK,OAAO,IAAI,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,OAAO,EAAE;QACxD,MAAM,IAAI,KAAK,CAAC,aAAa,GAAG,gBAAgB,CAAC,CAAC;KACnD;IAED,MAAM,UAAU,GAAG,YAAE,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAClD,OAAO,iBAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC/B,CAAC;AATD,gDASC;AAED,SAAS,YAAY,CAAC,IAAY;IAChC,IAAI,QAAQ,GAAG,IAAI,CAAC;IACpB,IAAI,YAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,YAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;QAC3D,QAAQ,GAAG,cAAI,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;KAC5C;IAED,OAAO,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AACtC,CAAC;AAED,SAAgB,wBAAwB,CAAC,IAAY;IACnD,MAAM,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;IAC/B,MAAM,eAAe,GAAG,IAAI,oCAAwB,CAAC,GAA+B,CAAC,CAAC;IACtF,eAAe,CAAC,QAAQ,EAAE,CAAC;IAC3B,OAAO,eAAe,CAAC;AACzB,CAAC;AALD,4DAKC","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport fs from 'fs';\nimport path from 'path';\nimport yaml from 'js-yaml';\nimport {ProjectManifestVersioned, VersionedProjectManifest} from './versioned';\n\nexport function loadFromJsonOrYaml(file: string): unknown {\n  const {ext} = path.parse(file);\n\n  if (ext !== '.yaml' && ext !== '.yml' && ext !== '.json') {\n    throw new Error(`Extension ${ext} not supported`);\n  }\n\n  const rawContent = fs.readFileSync(file, 'utf-8');\n  return yaml.load(rawContent);\n}\n\nfunction loadFromFile(file: string): unknown {\n  let filePath = file;\n  if (fs.existsSync(file) && fs.lstatSync(file).isDirectory()) {\n    filePath = path.join(file, 'project.yaml');\n  }\n\n  return loadFromJsonOrYaml(filePath);\n}\n\nexport function loadTerraProjectManifest(file: string): ProjectManifestVersioned {\n  const doc = loadFromFile(file);\n  const projectManifest = new ProjectManifestVersioned(doc as VersionedProjectManifest);\n  projectManifest.validate();\n  return projectManifest;\n}\n"]}