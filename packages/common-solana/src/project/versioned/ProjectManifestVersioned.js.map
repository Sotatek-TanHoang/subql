{"version":3,"file":"ProjectManifestVersioned.js","sourceRoot":"","sources":["ProjectManifestVersioned.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAEtC,6DAAwD;AACxD,yDAA+C;AAE/C,qCAAmD;AAInD,MAAM,kBAAkB,GAAG;IACzB,OAAO,EAAE,kCAAyB;CACnC,CAAC;AAMF,SAAgB,gBAAgB,CAAC,QAA+B;IAC9D,OAAO,QAAQ,CAAC,WAAW,KAAK,OAAO,CAAC;AAC1C,CAAC;AAFD,4CAEC;AAED,MAAa,wBAAwB;IAGnC,YAAY,eAAyC;QACnD,MAAM,KAAK,GAAG,kBAAkB,CAAC,eAAe,CAAC,WAAuB,CAAC,CAAC;QAC1E,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;SACxE;QACD,IAAI,CAAC,KAAK,GAAG,IAAA,gCAAY,EAAiD,KAAK,EAAE,eAAe,CAAC,CAAC;IACpG,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,WAAW,KAAK,OAAO,CAAC;IACtC,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,KAAkC,CAAC;IACjD,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;IAC7B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IACxB,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;IAChC,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;IAChC,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;IAChC,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;IAChC,CAAC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;IAC/B,CAAC;CACF;AAlDD,4DAkDC","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {SubqlTerraDatasource} from '@subql/types-terra';\nimport {plainToClass} from 'class-transformer';\nimport {ITerraProjectManifest} from '../types';\nimport {ProjectManifestV0_3_0Impl} from './v0_3_0';\n\nexport type VersionedProjectManifest = {specVersion: string};\n\nconst SUPPORTED_VERSIONS = {\n  '0.3.0': ProjectManifestV0_3_0Impl,\n};\n\ntype Versions = keyof typeof SUPPORTED_VERSIONS;\n\ntype ProjectManifestImpls = InstanceType<typeof SUPPORTED_VERSIONS[Versions]>;\n\nexport function manifestIsV0_3_0(manifest: ITerraProjectManifest): manifest is ProjectManifestV0_3_0Impl {\n  return manifest.specVersion === '0.3.0';\n}\n\nexport class ProjectManifestVersioned implements ITerraProjectManifest {\n  private _impl: ProjectManifestImpls;\n\n  constructor(projectManifest: VersionedProjectManifest) {\n    const klass = SUPPORTED_VERSIONS[projectManifest.specVersion as Versions];\n    if (!klass) {\n      throw new Error('specVersion not supported for project manifest file');\n    }\n    this._impl = plainToClass<ProjectManifestImpls, VersionedProjectManifest>(klass, projectManifest);\n  }\n\n  get asImpl(): ProjectManifestImpls {\n    return this._impl;\n  }\n\n  get isV0_3_0(): boolean {\n    return this.specVersion === '0.3.0';\n  }\n\n  get asV0_3_0(): ProjectManifestV0_3_0Impl {\n    return this._impl as ProjectManifestV0_3_0Impl;\n  }\n\n  toDeployment(): string | undefined {\n    return this.toDeployment();\n  }\n\n  validate(): void {\n    this._impl.validate();\n  }\n\n  get dataSources(): SubqlTerraDatasource[] {\n    return this._impl.dataSources;\n  }\n\n  get schema(): string {\n    return this._impl.schema.file;\n  }\n\n  get specVersion(): string {\n    return this._impl.specVersion;\n  }\n\n  get description(): string {\n    return this._impl.description;\n  }\n\n  get repository(): string {\n    return this._impl.repository;\n  }\n}\n"]}