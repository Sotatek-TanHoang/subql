{"version":3,"file":"models.js","sourceRoot":"","sources":["models.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n  SubqlTerraEventFilter,\n  SubqlTerraHandlerKind,\n  SubqlTerraCustomHandler,\n  SubqlTerraMapping,\n  SubqlTerraHandler,\n  SubqlTerraRuntimeHandler,\n  SubqlTerraRuntimeDatasource,\n  SubqlTerraDatasourceKind,\n  SubqlTerraCustomDatasource,\n  FileReference,\n  CustomDataSourceAsset,\n} from '@subql/types-terra';\n\nimport {plainToClass, Transform, Type} from 'class-transformer';\n\nimport {IsArray, IsEnum, IsInt, IsOptional, IsString, IsObject, ValidateNested} from 'class-validator';\n\nexport class TerraEventFilter implements SubqlTerraEventFilter {\n  @IsString()\n  type: string;\n}\n\nexport class TerraBlockHandler {\n  @IsEnum(SubqlTerraHandlerKind, {groups: [SubqlTerraHandlerKind.Block]})\n  kind: SubqlTerraHandlerKind.Block;\n  @IsString()\n  handler: string;\n}\n\nexport class TerraEventHandler {\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => TerraEventFilter)\n  filter?: SubqlTerraEventFilter;\n  @IsEnum(SubqlTerraHandlerKind, {groups: [SubqlTerraHandlerKind.Event]})\n  kind: SubqlTerraHandlerKind.Event;\n  @IsString()\n  handler: string;\n}\n\nexport class TerraCustomHandler implements SubqlTerraCustomHandler {\n  @IsString()\n  kind: string;\n  @IsString()\n  handler: string;\n  @IsObject()\n  @IsOptional()\n  filter?: Record<string, unknown>;\n}\n\nexport class TerraMapping implements SubqlTerraMapping {\n  @Transform((params) => {\n    const handlers: SubqlTerraHandler[] = params.value;\n    return handlers.map((handler) => {\n      switch (handler.kind) {\n        case SubqlTerraHandlerKind.Event:\n          return plainToClass(TerraEventHandler, handler);\n        case SubqlTerraHandlerKind.Block:\n          return plainToClass(TerraBlockHandler, handler);\n        default:\n          throw new Error(`handler ${(handler as any).kind} not supported`);\n      }\n    });\n  })\n  @IsArray()\n  @ValidateNested()\n  handlers: SubqlTerraHandler[];\n  @IsString()\n  file: string;\n}\n\nexport class TerraCustomMapping implements SubqlTerraMapping<SubqlTerraCustomHandler> {\n  @IsArray()\n  @Type(() => TerraCustomHandler)\n  @ValidateNested()\n  handlers: TerraCustomHandler[];\n  @IsString()\n  file: string;\n}\n\nexport class TerraRuntimeDataSourceBase<M extends SubqlTerraMapping<SubqlTerraRuntimeHandler>>\n  implements SubqlTerraRuntimeDatasource<M>\n{\n  @IsEnum(SubqlTerraDatasourceKind, {groups: [SubqlTerraDatasourceKind.Runtime]})\n  kind: SubqlTerraDatasourceKind.Runtime;\n  @Type(() => TerraMapping)\n  @ValidateNested()\n  mapping: M;\n  @IsInt()\n  startBlock: number;\n}\n\nexport class TerraFileReferenceImpl implements FileReference {\n  @IsString()\n  file: string;\n}\n\nexport class TerraCustomDataSourceBase<\n  K extends string,\n  M extends SubqlTerraMapping = SubqlTerraMapping<SubqlTerraCustomHandler>,\n  O = any\n> implements SubqlTerraCustomDatasource<K, M, O>\n{\n  @IsString()\n  kind: K;\n  @Type(() => TerraCustomMapping)\n  @ValidateNested()\n  mapping: M;\n  @IsOptional()\n  @IsInt()\n  startBlock?: number;\n  @Type(() => TerraFileReferenceImpl)\n  @ValidateNested({each: true})\n  assets: Map<string, CustomDataSourceAsset>;\n  @Type(() => TerraFileReferenceImpl)\n  @IsObject()\n  processor: FileReference;\n}\n"]}